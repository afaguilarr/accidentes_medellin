formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial"
)
com.dia.2 <- adj_model_com(formulas, TR_data, VA_data)
TR_data <- filter(df.comuna, PERIODO!=2018 & PERIODO!=2017)
VA_data <- filter(df.comuna, PERIODO==2018 | PERIODO==2017)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial")
)
com.dia.2 <- adj_model_com(formulas, TR_data, VA_data)
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
#,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
#,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
#,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
df.barrio <- read.csv("barrios_dia_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.comuna <- read.csv("comunas_dias_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
dias.especiales <-  read.csv("dias_espe.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.barrio <- df.barrio[,c(-1,-10)]
df.comuna<-df.comuna[,c(-1,-10)]
df.barrio$especial2 <- ifelse(df.barrio$especial2=0, "Normal", "Festivo")
df.barrio <- read.csv("barrios_dia_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.comuna <- read.csv("comunas_dias_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
dias.especiales <-  read.csv("dias_espe.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.barrio <- df.barrio[,c(-1,-10)]
df.comuna<-df.comuna[,c(-1,-10)]
df.barrio$especial2 <- ifelse(df.barrio$especial2==0, "Normal", "Festivo")
df.barrio <- read.csv("barrios_dia_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.comuna <- read.csv("comunas_dias_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
dias.especiales <-  read.csv("dias_espe.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.barrio <- df.barrio[,c(-1,-10)]
df.comuna<-df.comuna[,c(-1,-10)]
df.barrio$especial2 <- ifelse(df.barrio$especial2=="0", "Normal", "Festivo")
df.barrio <- read.csv("barrios_dia_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.comuna <- read.csv("comunas_dias_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
dias.especiales <-  read.csv("dias_espe.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.barrio <- df.barrio[,c(-1,-10)]
df.comuna<-df.comuna[,c(-1,-10)]
df.barrio$especial2 <- ifelse(df.barrio$especial==0, "Normal", "Festivo")
df.comuna$especial2 <- ifelse(df.comuna$especial==0, "Normal", "Festivo")
library(magrittr)
df.comuna %<>% mutate(DIA_NUM = as.factor(DIA_NUM))
df.comuna %<>% mutate(MES = as.factor(MES))
df.comuna %<>% mutate(especial = as.factor(especial))
df.comuna %<>% mutate(especial2 = as.factor(especial2))
df.barrio %<>% mutate(DIA_NUM = as.factor(DIA_NUM))
df.barrio %<>% mutate(MES = as.factor(MES))
df.barrio %<>% mutate(especial = as.factor(especial))
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
#,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
#,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial2")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
adj_model_com <- function(formulas, tr_data, val_data){
## determina si el modelo es para Comunas o Barrios
if("COMUNA" %in% colnames(tr_data)){
com <- unique(tr_data$COMUNA)
}else{
com <- unique(tr_data$BARRIO)
}
results <- data.frame(matrix(ncol=7, nrow=0))
for(co in com){
print(co)
if("COMUNA" %in% colnames(tr_data)){
temp_tr <- filter(tr_data, COMUNA==co)
temp_va <- filter(val_data, COMUNA==co)
ub_name <- "Comuna"
}
else{
temp_tr <- filter(tr_data, BARRIO==co)
temp_va <- filter(val_data, BARRIO==co)
ub_name <- "Barrio"
}
results2 <- data.frame(matrix(ncol=7, nrow=0)) #matriz de resultados para cada formula
for(formula in formulas){
mse_tr.v  <- c()
mse_val.v <- c()
model1 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model2 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model3 <- gamlss(formula = formula, data = temp_tr, family=NBI(mu.link = "identity"))
list_models = list(model1,model2, model3)
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model1, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model1,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model2, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model2,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model3, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model3,newdata= temp_va,data=temp_tr))^2))
temp <- data.frame(mse_tr = mse_tr.v , mse_va = mse_val.v)
temp$modelo <- list_models
best_model <- filter(temp, mse_va == min(temp$mse_va))
best_model$com_bar <- co
best_model$family <- best_model$model[[1]]$family[1]
best_model$form <- format(formula(best_model$model[[1]], what = c("mu")))
results2 <- rbind(results2, best_model)
}
results <- rbind(results,  filter(results2, mse_va == min(results2$mse_va)))
}
trans <- function(x) as.numeric(as.character(x))
results[, 1:2] <- sapply(results[, 1:2], trans)
#COnvierte los errores a variables numericas
colnames(results) <- c("MSE.tr", "MSE.va","Reg.obj", ub_name, "Family", "Formula")
results <- results[,c(4,1,2,5,6,3)]
return(results)
}
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
#,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
#,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial2")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
adj_model_com <- function(formulas, tr_data, val_data){
## determina si el modelo es para Comunas o Barrios
if("COMUNA" %in% colnames(tr_data)){
com <- unique(tr_data$COMUNA)
}else{
com <- unique(tr_data$BARRIO)
}
results <- data.frame(matrix(ncol=7, nrow=0))
for(co in com){
print(co)
if("COMUNA" %in% colnames(tr_data)){
temp_tr <- filter(tr_data, COMUNA==co)
temp_va <- filter(val_data, COMUNA==co)
ub_name <- "Comuna"
}
else{
temp_tr <- filter(tr_data, BARRIO==co)
temp_va <- filter(val_data, BARRIO==co)
ub_name <- "Barrio"
}
results2 <- data.frame(matrix(ncol=7, nrow=0)) #matriz de resultados para cada formula
for(formula in formulas){
mse_tr.v  <- c()
mse_val.v <- c()
model1 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model2 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model3 <- gamlss(formula = formula, data = temp_tr, family=NBI(mu.link = "identity"))
list_models = list(model1,model2, model3)
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model1, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model1,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model2, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model2,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model3, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model3,newdata= temp_va,data=temp_tr))^2))
temp <- data.frame(mse_tr = mse_tr.v , mse_va = mse_val.v)
temp$modelo <- list_models
best_model <- filter(temp, mse_va == min(temp$mse_va))
best_model$com_bar <- co
best_model$family <- best_model$model[[1]]$family[1]
best_model$form <- format(formula(best_model$model[[1]], what = c("mu")))
results2 <- rbind(results2, best_model)
}
results <- rbind(results,  filter(results2, mse_va == min(results2$mse_va)))
}
trans <- function(x) as.numeric(as.character(x))
results[, 1:2] <- sapply(results[, 1:2], trans)
#COnvierte los errores a variables numericas
colnames(results) <- c("MSE.tr", "MSE.va","Reg.obj", ub_name, "Family", "Formula")
results <- results[,c(4,1,2,5,6,3)]
return(results)
}
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
#,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
#,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial2")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
adj_model_com <- function(formulas, tr_data, val_data){
## determina si el modelo es para Comunas o Barrios
if("COMUNA" %in% colnames(tr_data)){
com <- unique(tr_data$COMUNA)
}else{
com <- unique(tr_data$BARRIO)
}
results <- data.frame(matrix(ncol=7, nrow=0))
for(co in com){
print(co)
if("COMUNA" %in% colnames(tr_data)){
temp_tr <- filter(tr_data, COMUNA==co)
temp_va <- filter(val_data, COMUNA==co)
ub_name <- "Comuna"
}
else{
temp_tr <- filter(tr_data, BARRIO==co)
temp_va <- filter(val_data, BARRIO==co)
ub_name <- "Barrio"
}
results2 <- data.frame(matrix(ncol=7, nrow=0)) #matriz de resultados para cada formula
for(formula in formulas){
mse_tr.v  <- c()
mse_val.v <- c()
model1 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model2 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model3 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
list_models = list(model1,model2, model3)
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model1, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model1,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model2, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model2,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model3, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model3,newdata= temp_va,data=temp_tr))^2))
temp <- data.frame(mse_tr = mse_tr.v , mse_va = mse_val.v)
temp$modelo <- list_models
best_model <- filter(temp, mse_va == min(temp$mse_va))
best_model$com_bar <- co
best_model$family <- best_model$model[[1]]$family[1]
best_model$form <- format(formula(best_model$model[[1]], what = c("mu")))
results2 <- rbind(results2, best_model)
}
results <- rbind(results,  filter(results2, mse_va == min(results2$mse_va)))
}
trans <- function(x) as.numeric(as.character(x))
results[, 1:2] <- sapply(results[, 1:2], trans)
#COnvierte los errores a variables numericas
colnames(results) <- c("MSE.tr", "MSE.va","Reg.obj", ub_name, "Family", "Formula")
results <- results[,c(4,1,2,5,6,3)]
return(results)
}
df.barrio <- read.csv("barrios_dia_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.comuna <- read.csv("comunas_dias_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
dias.especiales <-  read.csv("dias_espe.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.barrio <- df.barrio[,c(-1,-10)]
df.comuna<-df.comuna[,c(-1,-10)]
df.barrio$especial2 <- ifelse(df.barrio$especial==0, "Normal", "Festivo")
df.comuna$especial2 <- ifelse(df.comuna$especial==0, "Normal", "Festivo")
library(magrittr)
df.comuna %<>% mutate(DIA_NUM = as.factor(DIA_NUM))
df.comuna %<>% mutate(MES = as.factor(MES))
df.comuna %<>% mutate(especial = as.factor(especial))
df.comuna %<>% mutate(especial2 = as.factor(especial2))
df.barrio %<>% mutate(DIA_NUM = as.factor(DIA_NUM))
df.barrio %<>% mutate(MES = as.factor(MES))
df.barrio %<>% mutate(especial = as.factor(especial))
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
#,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
#,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial2")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
com.dia.1.vis <- com.dia.1[,-6]
View(com.dia.1)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
View(com.dia.1.vis)
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial2")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
com.dia.1.vis <- com.dia.1[,-6]
View(com.dia.1.vis)
library(tidyverse)
library(gamlss)
library(MASS)
df.barrio <- read.csv("barrios_dia_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.comuna <- read.csv("comunas_dias_esp.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
dias.especiales <-  read.csv("dias_espe.csv", stringsAsFactors = FALSE, encoding = "ISO_8859-1", header = T)
df.barrio <- df.barrio[,c(-1,-10)]
df.comuna<-df.comuna[,c(-1,-10)]
library(magrittr)
df.comuna %<>% mutate(DIA_NUM = as.factor(DIA_NUM))
df.comuna %<>% mutate(MES = as.factor(MES))
df.comuna %<>% mutate(especial = as.factor(especial))
df.barrio %<>% mutate(DIA_NUM = as.factor(DIA_NUM))
df.barrio %<>% mutate(MES = as.factor(MES))
df.barrio %<>% mutate(especial = as.factor(especial))
modeltest <- gamlss(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado"], family=PO(mu.link = "identity")
)
modeltest <- gamlss(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado",], family=PO(mu.link = "identity"))
summary(df.comuna[df.comuna$COMUNA=="El Poblado",])
temp <- df.comuna[df.comuna$COMUNA=="El Poblado",]
temp2 <- na.omit(df.comuna[df.comuna$COMUNA=="El Poblado",])
help(glm)
#modeltest <- gamlss(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado",], family=PO(mu.link = "identity"))
modeltest <- glm(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado",], family=Ppoisson(link = "identity"))
#modeltest <- gamlss(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado",], family=PO(mu.link = "identity"))
modeltest <- glm(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado",], family=poisson(link = "identity"))
#modeltest <- gamlss(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado",], family=PO(mu.link = "identity"))
modeltest <- glm(formula = formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial"), data = df.comuna[df.comuna$COMUNA=="El Poblado",])
View(modeltest)
summary(modeltest)
adj_model_com <- function(formulas, tr_data, val_data){
## determina si el modelo es para Comunas o Barrios
if("COMUNA" %in% colnames(tr_data)){
com <- unique(tr_data$COMUNA)
}else{
com <- unique(tr_data$BARRIO)
}
results <- data.frame(matrix(ncol=7, nrow=0))
for(co in com){
print(co)
if("COMUNA" %in% colnames(tr_data)){
temp_tr <- filter(tr_data, COMUNA==co)
temp_va <- filter(val_data, COMUNA==co)
ub_name <- "Comuna"
}
else{
temp_tr <- filter(tr_data, BARRIO==co)
temp_va <- filter(val_data, BARRIO==co)
ub_name <- "Barrio"
}
results2 <- data.frame(matrix(ncol=7, nrow=0)) #matriz de resultados para cada formula
if(co %in% c("El Poblado")){
formulas <- ormulas[1:5]
}
for(formula in formulas){
mse_tr.v  <- c()
mse_val.v <- c()
model1 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model2 <- gamlss(formula = formula, data = temp_tr, family=PO(mu.link = "identity"))
model3 <- gamlss(formula = formula, data = temp_tr, family=NBI(mu.link = "identity"))
list_models = list(model1,model2, model3)
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model1, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model1,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model2, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model2,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model3, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model3,newdata= temp_va,data=temp_tr))^2))
temp <- data.frame(mse_tr = mse_tr.v , mse_va = mse_val.v)
temp$modelo <- list_models
best_model <- filter(temp, mse_va == min(temp$mse_va))
best_model$com_bar <- co
best_model$family <- best_model$model[[1]]$family[1]
best_model$form <- format(formula(best_model$model[[1]], what = c("mu")))
results2 <- rbind(results2, best_model)
}
results <- rbind(results,  filter(results2, mse_va == min(results2$mse_va)))
}
trans <- function(x) as.numeric(as.character(x))
results[, 1:2] <- sapply(results[, 1:2], trans)
#COnvierte los errores a variables numericas
colnames(results) <- c("MSE.tr", "MSE.va","Reg.obj", ub_name, "Family", "Formula")
results <- results[,c(4,1,2,5,6,3)]
return(results)
}
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial2")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
adj_model_com <- function(formulas, tr_data, val_data){
## determina si el modelo es para Comunas o Barrios
if("COMUNA" %in% colnames(tr_data)){
com <- unique(tr_data$COMUNA)
}else{
com <- unique(tr_data$BARRIO)
}
results <- data.frame(matrix(ncol=7, nrow=0))
for(co in com){
print(co)
if("COMUNA" %in% colnames(tr_data)){
temp_tr <- filter(tr_data, COMUNA==co)
temp_va <- filter(val_data, COMUNA==co)
ub_name <- "Comuna"
}
else{
temp_tr <- filter(tr_data, BARRIO==co)
temp_va <- filter(val_data, BARRIO==co)
ub_name <- "Barrio"
}
results2 <- data.frame(matrix(ncol=7, nrow=0)) #matriz de resultados para cada formula
if(co %in% c("El Poblado")){
formulas <- formulas[1:5]
}
for(formula in formulas){
mse_tr.v  <- c()
mse_val.v <- c()
model1 <- gamlss(formula = formula, data = temp_tr, family=NO(mu.link = "identity"))
model2 <- gamlss(formula = formula, data = temp_tr, family=PO(mu.link = "identity"))
model3 <- gamlss(formula = formula, data = temp_tr, family=NBI(mu.link = "identity"))
list_models = list(model1,model2, model3)
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model1, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model1,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model2, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model2,newdata= temp_va,data=temp_tr))^2))
mse_tr.v  <- c(mse_tr.v, mean((temp_tr$total - predict(model3, newdata=temp_tr,data=temp_tr))^2))
mse_val.v <- c(mse_val.v, mean((temp_va$total - predict(model3,newdata= temp_va,data=temp_tr))^2))
temp <- data.frame(mse_tr = mse_tr.v , mse_va = mse_val.v)
temp$modelo <- list_models
best_model <- filter(temp, mse_va == min(temp$mse_va))
best_model$com_bar <- co
best_model$family <- best_model$model[[1]]$family[1]
best_model$form <- format(formula(best_model$model[[1]], what = c("mu")))
results2 <- rbind(results2, best_model)
}
results <- rbind(results,  filter(results2, mse_va == min(results2$mse_va)))
}
trans <- function(x) as.numeric(as.character(x))
results[, 1:2] <- sapply(results[, 1:2], trans)
#COnvierte los errores a variables numericas
colnames(results) <- c("MSE.tr", "MSE.va","Reg.obj", ub_name, "Family", "Formula")
results <- results[,c(4,1,2,5,6,3)]
return(results)
}
TR_data <- filter(df.comuna, PERIODO!=2018)
VA_data <- filter(df.comuna, PERIODO==2018)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial")
)
com.dia.1 <- adj_model_com(formulas, TR_data, VA_data)
com.dia.1.vis <- com.dia.1[,-6]
TR_data <- filter(df.comuna, PERIODO!=2018 & PERIODO!=2017)
VA_data <- filter(df.comuna, PERIODO==2018 | PERIODO==2017)
formulas = c(formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+DIA+MES+PERIODO"),
formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO"),
formula("total~DIA_NUM+MES+DIA"),
formula("total~DIA_NUM+MES")
,formula("total~DIA_NUM+DIA+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+I(PERIODO^2)+MES+PERIODO+especial")
,formula("total~DIA_NUM+MES+DIA+especial")
)
com.dia.2 <- adj_model_com(formulas, TR_data, VA_data)
com.dia.2.vis <- com.dia.2[,-6]
View(com.dia.1.vis)
View(com.dia.2.vis)
